html,
body,
body div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
figure,
footer,
header,
menu,
nav,
section,
time,
mark,
audio,
video,
details,
summary {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent;
}
main,
article,
aside,
figure,
footer,
header,
nav,
section,
details,
summary {
  display: block;
}
html {
  box-sizing: border-box;
  overflow-y: scroll;
  font-size: 16px;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}
img,
object,
embed {
  max-width: 100%;
}
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
a {
  border: 0;
  outline: 0;
  text-decoration: none;
}
del {
  text-decoration: line-through;
}
abbr[title],
dfn[title] {
  border-bottom: 1px dotted #000;
  cursor: help;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  font-size: inherit;
  font: 100%;
}
th {
  font-weight: bold;
  vertical-align: bottom;
}
td {
  font-weight: normal;
  vertical-align: top;
}
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}
input,
select {
  vertical-align: middle;
}
pre {
  white-space: pre;
  white-space: pre-wrap;
  white-space: pre-line;
  word-wrap: break-word;
}
input[type="radio"] {
  vertical-align: text-bottom;
}
input[type="checkbox"] {
  vertical-align: bottom;
}
.ie7 input[type="checkbox"] {
  vertical-align: baseline;
}
.ie7 img {
  -ms-interpolation-mode: bicubic;
}
.ie6 input {
  vertical-align: text-bottom;
}
select,
input,
textarea {
  font: 99% sans-serif;
}
small {
  font-size: 85%;
}
strong {
  font-weight: bold;
}
td,
td img {
  vertical-align: top;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
pre,
code,
kbd,
samp {
  font-family: monospace, sans-serif;
}
.clickable,
label,
input[type=button],
input[type=submit],
input[type=file],
button {
  cursor: pointer;
}
button,
input,
select,
textarea {
  margin: 0;
}
button,
input[type=button] {
  width: auto;
  overflow: visible;
}
.clearfix:after {
  content: " ";
  display: block;
  clear: both;
}
.page-container,
#header .container,
.container {
  display: block;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
}
.page-container {
  max-width: 100%;
}
#header .container {
  max-width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
}
.container {
  max-width: 1400px;
}
body {
  font-family: Montserrat, sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.6;
}
p {
  margin-bottom: 2rem;
}
nav,
nav a:not(.btn):not(.button) {
  font-size: 13px;
  font-weight: 500;
  line-height: 1;
  letter-spacing: 0.01em;
}
.btn,
a.btn,
.button,
a.button,
button,
input[type="submit"],
input[type="button"],
input[type="reset"] {
  font-family: Montserrat, sans-serif;
  font-size: 15px;
  font-weight: 600;
  line-height: 1;
  letter-spacing: 0.01em;
  text-transform: uppercase;
  margin-bottom: 1rem;
}
.caption {
  font-size: 13px;
  font-weight: 400;
  line-height: 1.4;
}
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: Montserrat, sans-serif;
}
h1,
.h1 {
  font-size: 56px;
  font-weight: 400;
  line-height: 1;
  letter-spacing: -0.03em;
  margin-bottom: 1.5rem;
}
h2,
.h2 {
  font-size: 48px;
  font-weight: 400;
  line-height: 1;
  letter-spacing: -0.02em;
  margin-bottom: 1rem;
}
h3,
.h3 {
  font-size: 36px;
  font-weight: 400;
  line-height: 1.1;
  letter-spacing: -0.01em;
  margin-bottom: 1rem;
}
h4,
.h4 {
  font-size: 28px;
  font-weight: 500;
  line-height: 1.2;
  letter-spacing: -0.01em;
  margin-bottom: 1rem;
}
h5,
.h5 {
  font-size: 20px;
  font-weight: 700;
  line-height: 1.3;
  margin-bottom: 1rem;
}
h6,
.h6 {
  font-size: 16px;
  font-weight: 700;
  line-height: 1.4;
  margin-bottom: 1rem;
}
.margin-top-0,
.mt-0 {
  margin-top: 0 !important;
}
.margin-bottom-0,
.mb-0 {
  margin-bottom: 0 !important;
}
.margin-left-0,
.ml-0 {
  margin-left: 0 !important;
}
.margin-right-0,
.mr-0 {
  margin-right: 0 !important;
}
.padding-top-0,
.pt-0 {
  padding-top: 0 !important;
}
.padding-bottom-0,
.pb-0 {
  padding-bottom: 0 !important;
}
.padding-left-0,
.pl-0 {
  padding-left: 0 !important;
}
.padding-right-0,
.pr-0 {
  padding-right: 0 !important;
}
.margin-top-1,
.mt-1 {
  margin-top: 1rem;
}
.margin-bottom-1,
.mb-1 {
  margin-bottom: 1rem;
}
.margin-left-1,
.ml-1 {
  margin-left: 1rem;
}
.margin-right-1,
.mr-1 {
  margin-right: 1rem;
}
.padding-top-1,
.pt-1 {
  padding-top: 1rem;
}
.padding-bottom-1,
.pb-1 {
  padding-bottom: 1rem;
}
.padding-left-1,
.pl-1 {
  padding-left: 1rem;
}
.padding-right-1,
.pr-1 {
  padding-right: 1rem;
}
.margin-top-2,
.mt-2 {
  margin-top: 2rem;
}
.margin-bottom-2,
.mb-2 {
  margin-bottom: 2rem;
}
.margin-left-2,
.ml-2 {
  margin-left: 2rem;
}
.margin-right-2,
.mr-2 {
  margin-right: 2rem;
}
.padding-top-2,
.pt-2 {
  padding-top: 2rem;
}
.padding-bottom-2,
.pb-2 {
  padding-bottom: 2rem;
}
.padding-left-2,
.pl-2 {
  padding-left: 2rem;
}
.padding-right-2,
.pr-2 {
  padding-right: 2rem;
}
.margin-top-3,
.mt-3 {
  margin-top: 3rem;
}
.margin-bottom-3,
.mb-3 {
  margin-bottom: 3rem;
}
.margin-left-3,
.ml-3 {
  margin-left: 3rem;
}
.margin-right-3,
.mr-3 {
  margin-right: 3rem;
}
.padding-top-3,
.pt-3 {
  padding-top: 3rem;
}
.padding-bottom-3,
.pb-3 {
  padding-bottom: 3rem;
}
.padding-left-3,
.pl-3 {
  padding-left: 3rem;
}
.padding-right-3,
.pr-3 {
  padding-right: 3rem;
}
.margin-top-4,
.mt-4 {
  margin-top: 4rem;
}
.margin-bottom-4,
.mb-4 {
  margin-bottom: 4rem;
}
.margin-left-4,
.ml-4 {
  margin-left: 4rem;
}
.margin-right-4,
.mr-4 {
  margin-right: 4rem;
}
.padding-top-4,
.pt-4 {
  padding-top: 4rem;
}
.padding-bottom-4,
.pb-4 {
  padding-bottom: 4rem;
}
.padding-left-4,
.pl-4 {
  padding-left: 4rem;
}
.padding-right-4,
.pr-4 {
  padding-right: 4rem;
}
.margin-top-5,
.mt-5 {
  margin-top: 5rem;
}
.margin-bottom-5,
.mb-5 {
  margin-bottom: 5rem;
}
.margin-left-5,
.ml-5 {
  margin-left: 5rem;
}
.margin-right-5,
.mr-5 {
  margin-right: 5rem;
}
.padding-top-5,
.pt-5 {
  padding-top: 5rem;
}
.padding-bottom-5,
.pb-5 {
  padding-bottom: 5rem;
}
.padding-left-5,
.pl-5 {
  padding-left: 5rem;
}
.padding-right-5,
.pr-5 {
  padding-right: 5rem;
}
.margin-top-6,
.mt-6 {
  margin-top: 6rem;
}
.margin-bottom-6,
.mb-6 {
  margin-bottom: 6rem;
}
.margin-left-6,
.ml-6 {
  margin-left: 6rem;
}
.margin-right-6,
.mr-6 {
  margin-right: 6rem;
}
.padding-top-6,
.pt-6 {
  padding-top: 6rem;
}
.padding-bottom-6,
.pb-6 {
  padding-bottom: 6rem;
}
.padding-left-6,
.pl-6 {
  padding-left: 6rem;
}
.padding-right-6,
.pr-6 {
  padding-right: 6rem;
}
.margin-top-7,
.mt-7 {
  margin-top: 7rem;
}
.margin-bottom-7,
.mb-7 {
  margin-bottom: 7rem;
}
.margin-left-7,
.ml-7 {
  margin-left: 7rem;
}
.margin-right-7,
.mr-7 {
  margin-right: 7rem;
}
.padding-top-7,
.pt-7 {
  padding-top: 7rem;
}
.padding-bottom-7,
.pb-7 {
  padding-bottom: 7rem;
}
.padding-left-7,
.pl-7 {
  padding-left: 7rem;
}
.padding-right-7,
.pr-7 {
  padding-right: 7rem;
}
.margin-top-8,
.mt-8 {
  margin-top: 8rem;
}
.margin-bottom-8,
.mb-8 {
  margin-bottom: 8rem;
}
.margin-left-8,
.ml-8 {
  margin-left: 8rem;
}
.margin-right-8,
.mr-8 {
  margin-right: 8rem;
}
.padding-top-8,
.pt-8 {
  padding-top: 8rem;
}
.padding-bottom-8,
.pb-8 {
  padding-bottom: 8rem;
}
.padding-left-8,
.pl-8 {
  padding-left: 8rem;
}
.padding-right-8,
.pr-8 {
  padding-right: 8rem;
}
.margin-top-9,
.mt-9 {
  margin-top: 9rem;
}
.margin-bottom-9,
.mb-9 {
  margin-bottom: 9rem;
}
.margin-left-9,
.ml-9 {
  margin-left: 9rem;
}
.margin-right-9,
.mr-9 {
  margin-right: 9rem;
}
.padding-top-9,
.pt-9 {
  padding-top: 9rem;
}
.padding-bottom-9,
.pb-9 {
  padding-bottom: 9rem;
}
.padding-left-9,
.pl-9 {
  padding-left: 9rem;
}
.padding-right-9,
.pr-9 {
  padding-right: 9rem;
}
.margin-top-10,
.mt-10 {
  margin-top: 10rem;
}
.margin-bottom-10,
.mb-10 {
  margin-bottom: 10rem;
}
.margin-left-10,
.ml-10 {
  margin-left: 10rem;
}
.margin-right-10,
.mr-10 {
  margin-right: 10rem;
}
.padding-top-10,
.pt-10 {
  padding-top: 10rem;
}
.padding-bottom-10,
.pb-10 {
  padding-bottom: 10rem;
}
.padding-left-10,
.pl-10 {
  padding-left: 10rem;
}
.padding-right-10,
.pr-10 {
  padding-right: 10rem;
}
.storefront-breadcrumb {
  display: none;
}
#pokenav {
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  align-content: stretch;
}
#pokenav > *:nth-child(16n + 1) {
  flex: 100px auto 100px;
}
@media (max-width: 736px) {
  .container {
    padding-left: 1rem;
    padding-right: 1rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
